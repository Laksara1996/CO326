

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue May 26 14:23:09 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 05/05/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F26K20 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    62  0000                     
    63 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    64  0000                     
    65 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    66  0000                     
    67                           	psect	nvCOMRAM
    68  000001                     __pnvCOMRAM:
    69                           	callstack 0
    70  000001                     _EUSART_ErrorHandler:
    71                           	callstack 0
    72  000001                     	ds	2
    73  000003                     _EUSART_OverrunErrorHandler:
    74                           	callstack 0
    75  000003                     	ds	2
    76  000005                     _EUSART_FramingErrorHandler:
    77                           	callstack 0
    78  000005                     	ds	2
    79  0000                     _INTCONbits	set	4082
    80  0000                     _INTCON2bits	set	4081
    81  0000                     _WPUB	set	3964
    82  0000                     _ANSELH	set	3967
    83  0000                     _ANSEL	set	3966
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISB	set	3987
    86  0000                     _TRISA	set	3986
    87  0000                     _LATC	set	3979
    88  0000                     _LATB	set	3978
    89  0000                     _LATA	set	3977
    90  0000                     _OSCTUNE	set	3995
    91  0000                     _OSCCON	set	4051
    92  0000                     _TXREG	set	4013
    93  0000                     _RCREG	set	4014
    94  0000                     _RCSTAbits	set	4011
    95  0000                     _TXSTAbits	set	4012
    96  0000                     _PIR1bits	set	3998
    97  0000                     _SPBRGH	set	4016
    98  0000                     _SPBRG	set	4015
    99  0000                     _TXSTA	set	4012
   100  0000                     _RCSTA	set	4011
   101  0000                     _BAUDCON	set	4024
   102  0000                     _LATBbits	set	3978
   103                           
   104                           	psect	smallconst
   105  001000                     __psmallconst:
   106                           	callstack 0
   107  001000  00                 	db	0
   108  001001                     STR_2:
   109  001001  50                 	db	80	;'P'
   110  001002  72                 	db	114	;'r'
   111  001003  65                 	db	101	;'e'
   112  001004  73                 	db	115	;'s'
   113  001005  73                 	db	115	;'s'
   114  001006  20                 	db	32
   115  001007  31                 	db	49	;'1'
   116  001008  20                 	db	32
   117  001009  66                 	db	102	;'f'
   118  00100A  6F                 	db	111	;'o'
   119  00100B  72                 	db	114	;'r'
   120  00100C  20                 	db	32
   121  00100D  52                 	db	82	;'R'
   122  00100E  65                 	db	101	;'e'
   123  00100F  64                 	db	100	;'d'
   124  001010  2C                 	db	44
   125  001011  20                 	db	32
   126  001012  32                 	db	50	;'2'
   127  001013  20                 	db	32
   128  001014  66                 	db	102	;'f'
   129  001015  6F                 	db	111	;'o'
   130  001016  72                 	db	114	;'r'
   131  001017  20                 	db	32
   132  001018  59                 	db	89	;'Y'
   133  001019  65                 	db	101	;'e'
   134  00101A  6C                 	db	108	;'l'
   135  00101B  6C                 	db	108	;'l'
   136  00101C  6F                 	db	111	;'o'
   137  00101D  77                 	db	119	;'w'
   138  00101E  2C                 	db	44
   139  00101F  20                 	db	32
   140  001020  33                 	db	51	;'3'
   141  001021  20                 	db	32
   142  001022  66                 	db	102	;'f'
   143  001023  6F                 	db	111	;'o'
   144  001024  72                 	db	114	;'r'
   145  001025  20                 	db	32
   146  001026  47                 	db	71	;'G'
   147  001027  72                 	db	114	;'r'
   148  001028  65                 	db	101	;'e'
   149  001029  65                 	db	101	;'e'
   150  00102A  6E                 	db	110	;'n'
   151  00102B  20                 	db	32
   152  00102C  2E                 	db	46
   153  00102D  2E                 	db	46
   154  00102E  2E                 	db	46
   155  00102F  0D                 	db	13
   156  001030  0A                 	db	10
   157  001031  00                 	db	0
   158  001032                     STR_1:
   159  001032  57                 	db	87	;'W'
   160  001033  65                 	db	101	;'e'
   161  001034  6C                 	db	108	;'l'
   162  001035  63                 	db	99	;'c'
   163  001036  6F                 	db	111	;'o'
   164  001037  6D                 	db	109	;'m'
   165  001038  65                 	db	101	;'e'
   166  001039  20                 	db	32
   167  00103A  74                 	db	116	;'t'
   168  00103B  6F                 	db	111	;'o'
   169  00103C  20                 	db	32
   170  00103D  43                 	db	67	;'C'
   171  00103E  4F                 	db	79	;'O'
   172  00103F  33                 	db	51	;'3'
   173  001040  32                 	db	50	;'2'
   174  001041  36                 	db	54	;'6'
   175  001042  20                 	db	32
   176  001043  4C                 	db	76	;'L'
   177  001044  61                 	db	97	;'a'
   178  001045  62                 	db	98	;'b'
   179  001046  33                 	db	51	;'3'
   180  001047  0D                 	db	13
   181  001048  0A                 	db	10
   182  001049  00                 	db	0
   183  00104A  00                 	db	0	; dummy byte at the end
   184  0000                     
   185                           ; #config settings
   186                           
   187                           	psect	cinit
   188  0011D0                     __pcinit:
   189                           	callstack 0
   190  0011D0                     start_initialization:
   191                           	callstack 0
   192  0011D0                     __initialization:
   193                           	callstack 0
   194                           
   195                           ; Clear objects allocated to COMRAM (2 bytes)
   196  0011D0  6A0D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   197  0011D2  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   198  0011D4                     end_of_initialization:
   199                           	callstack 0
   200  0011D4                     __end_of__initialization:
   201                           	callstack 0
   202  0011D4  0100               	movlb	0
   203  0011D6  EF26  F008         	goto	_main	;jump to C main() function
   204                           
   205                           	psect	bssCOMRAM
   206  00000C                     __pbssCOMRAM:
   207                           	callstack 0
   208  00000C                     _eusartRxLastError:
   209                           	callstack 0
   210  00000C                     	ds	1
   211  00000D                     _data:
   212                           	callstack 0
   213  00000D                     	ds	1
   214                           
   215                           	psect	cstackCOMRAM
   216  000007                     __pcstackCOMRAM:
   217                           	callstack 0
   218  000007                     EUSART_Write@txData:
   219                           	callstack 0
   220  000007                     EUSART_SetFramingErrorHandler@interruptHandler:
   221                           	callstack 0
   222  000007                     EUSART_SetOverrunErrorHandler@interruptHandler:
   223                           	callstack 0
   224  000007                     EUSART_SetErrorHandler@interruptHandler:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x0
   228  000007                     	ds	1
   229  000008                     send_string@x:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x1
   233  000008                     	ds	1
   234  000009                     
   235                           ; 1 bytes @ 0x2
   236  000009                     	ds	1
   237  00000A                     ??_main:
   238                           
   239                           ; 1 bytes @ 0x3
   240  00000A                     	ds	2
   241                           
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 60 in file "main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;Total ram usage:        2 bytes
   266 ;; Hardware stack levels required when called:    3
   267 ;; This function calls:
   268 ;;		_EUSART_Read
   269 ;;		_SYSTEM_Initialize
   270 ;;		_send_string
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text0
   277  00104C                     __ptext0:
   278                           	callstack 0
   279  00104C                     _main:
   280                           	callstack 28
   281  00104C                     
   282                           ;main.c: 63:     SYSTEM_Initialize();
   283  00104C  ECE1  F008         	call	_SYSTEM_Initialize	;wreg free
   284  001050                     
   285                           ;main.c: 82:     send_string("Welcome to CO326 Lab3\r\n");
   286  001050  0E32               	movlw	low STR_1
   287  001052  6E08               	movwf	send_string@x^0,c
   288  001054  0E10               	movlw	high STR_1
   289  001056  6E09               	movwf	(send_string@x+1)^0,c
   290  001058  EC92  F008         	call	_send_string	;wreg free
   291  00105C                     
   292                           ;main.c: 83:     _delay((unsigned long)((500)*(8000000/4000.0)));
   293  00105C  0E06               	movlw	6
   294  00105E  6E0B               	movwf	(??_main+1)^0,c
   295  001060  0E13               	movlw	19
   296  001062  6E0A               	movwf	??_main^0,c
   297  001064  0EAE               	movlw	174
   298  001066                     u87:
   299  001066  2EE8               	decfsz	wreg,f,c
   300  001068  D7FE               	bra	u87
   301  00106A  2E0A               	decfsz	??_main^0,f,c
   302  00106C  D7FC               	bra	u87
   303  00106E  2E0B               	decfsz	(??_main+1)^0,f,c
   304  001070  D7FA               	bra	u87
   305  001072                     
   306                           ;main.c: 84:     send_string("Press 1 for Red, 2 for Yellow, 3 for Green ...\r\n");
   307  001072  0E01               	movlw	low STR_2
   308  001074  6E08               	movwf	send_string@x^0,c
   309  001076  0E10               	movlw	high STR_2
   310  001078  6E09               	movwf	(send_string@x+1)^0,c
   311  00107A  EC92  F008         	call	_send_string	;wreg free
   312  00107E                     l992:
   313                           
   314                           ;main.c: 87:     {;main.c: 89:         data=EUSART_Read();
   315  00107E  ECAF  F008         	call	_EUSART_Read	;wreg free
   316  001082  6E0D               	movwf	_data^0,c
   317                           
   318                           ;main.c: 91:         switch(data){
   319  001084  EF58  F008         	goto	l994
   320  001088                     l26:
   321  001088  808A               	bsf	138,0,c	;volatile
   322  00108A  948A               	bcf	138,2,c	;volatile
   323  00108C  928A               	bcf	138,1,c	;volatile
   324  00108E  EF3F  F008         	goto	l992
   325  001092                     l34:
   326  001092  828A               	bsf	138,1,c	;volatile
   327  001094  948A               	bcf	138,2,c	;volatile
   328  001096  908A               	bcf	138,0,c	;volatile
   329  001098  EF3F  F008         	goto	l992
   330  00109C                     l41:
   331  00109C  848A               	bsf	138,2,c	;volatile
   332  00109E  908A               	bcf	138,0,c	;volatile
   333  0010A0  928A               	bcf	138,1,c	;volatile
   334  0010A2  EF3F  F008         	goto	l992
   335  0010A6                     l48:
   336  0010A6  908A               	bcf	138,0,c	;volatile
   337  0010A8  928A               	bcf	138,1,c	;volatile
   338  0010AA  948A               	bcf	138,2,c	;volatile
   339  0010AC  EF3F  F008         	goto	l992
   340  0010B0                     l994:
   341  0010B0  500D               	movf	_data^0,w,c
   342  0010B2  6E0A               	movwf	??_main^0,c
   343  0010B4  6A0B               	clrf	(??_main+1)^0,c
   344                           
   345                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   346                           ; Switch size 1, requested type "simple"
   347                           ; Number of cases is 1, Range of values is 0 to 0
   348                           ; switch strategies available:
   349                           ; Name         Instructions Cycles
   350                           ; simple_byte            4     3 (average)
   351                           ;	Chosen strategy is simple_byte
   352  0010B6  500B               	movf	(??_main+1)^0,w,c
   353  0010B8  0A00               	xorlw	0	; case 0
   354  0010BA  B4D8               	btfsc	status,2,c
   355  0010BC  EF62  F008         	goto	l1004
   356  0010C0  EF53  F008         	goto	l48
   357  0010C4                     l1004:
   358                           
   359                           ; Switch size 1, requested type "simple"
   360                           ; Number of cases is 3, Range of values is 49 to 51
   361                           ; switch strategies available:
   362                           ; Name         Instructions Cycles
   363                           ; simple_byte           10     6 (average)
   364                           ;	Chosen strategy is simple_byte
   365  0010C4  500A               	movf	??_main^0,w,c
   366  0010C6  0A31               	xorlw	49	; case 49
   367  0010C8  B4D8               	btfsc	status,2,c
   368  0010CA  EF44  F008         	goto	l26
   369  0010CE  0A03               	xorlw	3	; case 50
   370  0010D0  B4D8               	btfsc	status,2,c
   371  0010D2  EF49  F008         	goto	l34
   372  0010D6  0A01               	xorlw	1	; case 51
   373  0010D8  B4D8               	btfsc	status,2,c
   374  0010DA  EF4E  F008         	goto	l41
   375  0010DE  EF53  F008         	goto	l48
   376  0010E2  EF00  F000         	goto	start
   377  0010E6                     __end_of_main:
   378                           	callstack 0
   379                           
   380 ;; *************** function _send_string *****************
   381 ;; Defined at:
   382 ;;		line 50 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  x               2    1[COMRAM] PTR const unsigned char 
   385 ;;		 -> STR_2(49), STR_1(24), 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        2 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    1
   404 ;; This function calls:
   405 ;;		_EUSART_Write
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text1
   412  001124                     __ptext1:
   413                           	callstack 0
   414  001124                     _send_string:
   415                           	callstack 29
   416  001124                     
   417                           ;main.c: 50: void send_string(const char *x);main.c: 51: {;main.c: 52:  while (*x)
   418  001124  EF9F  F008         	goto	l978
   419  001128                     l974:
   420                           
   421                           ;main.c: 53:  {;main.c: 54:     EUSART_Write(*x++);
   422  001128  C008  FFF6         	movff	send_string@x,tblptrl
   423  00112C  C009  FFF7         	movff	send_string@x+1,tblptrh
   424  001130                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   425  001130  6AF8               	clrf	tblptru,c
   426  001132                     	endif
   427  001132                     	if	0	;tblptru may be non-zero
   428  001132                     	endif
   429  001132  0008               	tblrd		*
   430  001134  50F5               	movf	tablat,w,c
   431  001136  ECD6  F008         	call	_EUSART_Write
   432  00113A  4A08               	infsnz	send_string@x^0,f,c
   433  00113C  2A09               	incf	(send_string@x+1)^0,f,c
   434  00113E                     l978:
   435                           
   436                           ;main.c: 52:  while (*x)
   437  00113E  C008  FFF6         	movff	send_string@x,tblptrl
   438  001142  C009  FFF7         	movff	send_string@x+1,tblptrh
   439  001146                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   440  001146  6AF8               	clrf	tblptru,c
   441  001148                     	endif
   442  001148                     	if	0	;tblptru may be non-zero
   443  001148                     	endif
   444  001148  0008               	tblrd		*
   445  00114A  50F5               	movf	tablat,w,c
   446  00114C  0900               	iorlw	0
   447  00114E  A4D8               	btfss	status,2,c
   448  001150  EFAC  F008         	goto	u71
   449  001154  EFAE  F008         	goto	u70
   450  001158                     u71:
   451  001158  EF94  F008         	goto	l974
   452  00115C                     u70:
   453  00115C  0012               	return		;funcret
   454  00115E                     __end_of_send_string:
   455                           	callstack 0
   456                           
   457 ;; *************** function _EUSART_Write *****************
   458 ;; Defined at:
   459 ;;		line 132 in file "mcc_generated_files/eusart.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;  txData          1    wreg     unsigned char 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  txData          1    0[COMRAM] unsigned char 
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		wreg
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;Total ram usage:        1 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_send_string
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text2
   487  0011AC                     __ptext2:
   488                           	callstack 0
   489  0011AC                     _EUSART_Write:
   490                           	callstack 29
   491                           
   492                           ;incstack = 0
   493                           ;EUSART_Write@txData stored from wreg
   494  0011AC  6E07               	movwf	EUSART_Write@txData^0,c
   495  0011AE                     l123:
   496                           
   497                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
   498  0011AE  A89E               	btfss	158,4,c	;volatile
   499  0011B0  EFDC  F008         	goto	u11
   500  0011B4  EFDE  F008         	goto	u10
   501  0011B8                     u11:
   502  0011B8  EFD7  F008         	goto	l123
   503  0011BC                     u10:
   504  0011BC                     
   505                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
   506  0011BC  C007  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   507  0011C0  0012               	return		;funcret
   508  0011C2                     __end_of_EUSART_Write:
   509                           	callstack 0
   510                           
   511 ;; *************** function _SYSTEM_Initialize *****************
   512 ;; Defined at:
   513 ;;		line 50 in file "mcc_generated_files/mcc.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    2
   534 ;; This function calls:
   535 ;;		_EUSART_Initialize
   536 ;;		_OSCILLATOR_Initialize
   537 ;;		_PIN_MANAGER_Initialize
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text3
   544  0011C2                     __ptext3:
   545                           	callstack 0
   546  0011C2                     _SYSTEM_Initialize:
   547                           	callstack 28
   548  0011C2                     
   549                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   550  0011C2  ECC3  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   551                           
   552                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   553  0011C6  ECED  F008         	call	_OSCILLATOR_Initialize	;wreg free
   554  0011CA                     
   555                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
   556  0011CA  EC73  F008         	call	_EUSART_Initialize	;wreg free
   557  0011CE  0012               	return		;funcret
   558  0011D0                     __end_of_SYSTEM_Initialize:
   559                           	callstack 0
   560                           
   561 ;; *************** function _PIN_MANAGER_Initialize *****************
   562 ;; Defined at:
   563 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_SYSTEM_Initialize
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text4
   591  001186                     __ptext4:
   592                           	callstack 0
   593  001186                     _PIN_MANAGER_Initialize:
   594                           	callstack 29
   595  001186                     
   596                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   597  001186  0E00               	movlw	0
   598  001188  6E89               	movwf	137,c	;volatile
   599                           
   600                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   601  00118A  0E00               	movlw	0
   602  00118C  6E8A               	movwf	138,c	;volatile
   603                           
   604                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   605  00118E  0E00               	movlw	0
   606  001190  6E8B               	movwf	139,c	;volatile
   607  001192                     
   608                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   609  001192  6892               	setf	146,c	;volatile
   610                           
   611                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF8;
   612  001194  0EF8               	movlw	248
   613  001196  6E93               	movwf	147,c	;volatile
   614                           
   615                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   616  001198  0EBF               	movlw	191
   617  00119A  6E94               	movwf	148,c	;volatile
   618                           
   619                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x1F;
   620  00119C  0E1F               	movlw	31
   621  00119E  6E7E               	movwf	126,c	;volatile
   622                           
   623                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
   624  0011A0  0E1F               	movlw	31
   625  0011A2  6E7F               	movwf	127,c	;volatile
   626                           
   627                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
   628  0011A4  0E00               	movlw	0
   629  0011A6  6E7C               	movwf	124,c	;volatile
   630  0011A8                     
   631                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
   632  0011A8  8EF1               	bsf	241,7,c	;volatile
   633  0011AA  0012               	return		;funcret
   634  0011AC                     __end_of_PIN_MANAGER_Initialize:
   635                           	callstack 0
   636                           
   637 ;; *************** function _OSCILLATOR_Initialize *****************
   638 ;; Defined at:
   639 ;;		line 58 in file "mcc_generated_files/mcc.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;Total ram usage:        0 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_SYSTEM_Initialize
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text5
   667  0011DA                     __ptext5:
   668                           	callstack 0
   669  0011DA                     _OSCILLATOR_Initialize:
   670                           	callstack 29
   671  0011DA                     
   672                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x62;
   673  0011DA  0E62               	movlw	98
   674  0011DC  6ED3               	movwf	211,c	;volatile
   675                           
   676                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
   677  0011DE  0E00               	movlw	0
   678  0011E0  6E9B               	movwf	155,c	;volatile
   679  0011E2  0012               	return		;funcret
   680  0011E4                     __end_of_OSCILLATOR_Initialize:
   681                           	callstack 0
   682                           
   683 ;; *************** function _EUSART_Initialize *****************
   684 ;; Defined at:
   685 ;;		line 66 in file "mcc_generated_files/eusart.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;Total ram usage:        0 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    1
   706 ;; This function calls:
   707 ;;		_EUSART_SetErrorHandler
   708 ;;		_EUSART_SetFramingErrorHandler
   709 ;;		_EUSART_SetOverrunErrorHandler
   710 ;; This function is called by:
   711 ;;		_SYSTEM_Initialize
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text6
   716  0010E6                     __ptext6:
   717                           	callstack 0
   718  0010E6                     _EUSART_Initialize:
   719                           	callstack 28
   720  0010E6                     
   721                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
   722  0010E6  0E08               	movlw	8
   723  0010E8  6EB8               	movwf	184,c	;volatile
   724                           
   725                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
   726  0010EA  0E90               	movlw	144
   727  0010EC  6EAB               	movwf	171,c	;volatile
   728                           
   729                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
   730  0010EE  0E24               	movlw	36
   731  0010F0  6EAC               	movwf	172,c	;volatile
   732                           
   733                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xCF;
   734  0010F2  0ECF               	movlw	207
   735  0010F4  6EAF               	movwf	175,c	;volatile
   736                           
   737                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
   738  0010F6  0E00               	movlw	0
   739  0010F8  6EB0               	movwf	176,c	;volatile
   740  0010FA                     
   741                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   742  0010FA  0E00               	movlw	0
   743  0010FC  6E07               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   744  0010FE  0E00               	movlw	0
   745  001100  6E08               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   746  001102  ECF7  F008         	call	_EUSART_SetFramingErrorHandler	;wreg free
   747  001106                     
   748                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   749  001106  0E00               	movlw	0
   750  001108  6E07               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   751  00110A  0E00               	movlw	0
   752  00110C  6E08               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   753  00110E  ECF2  F008         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   754  001112                     
   755                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   756  001112  0E00               	movlw	0
   757  001114  6E07               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   758  001116  0E00               	movlw	0
   759  001118  6E08               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   760  00111A  ECFC  F008         	call	_EUSART_SetErrorHandler	;wreg free
   761  00111E                     
   762                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
   763  00111E  0E00               	movlw	0
   764  001120  6E0C               	movwf	_eusartRxLastError^0,c	;volatile
   765  001122  0012               	return		;funcret
   766  001124                     __end_of_EUSART_Initialize:
   767                           	callstack 0
   768                           
   769 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
   770 ;; Defined at:
   771 ;;		line 161 in file "mcc_generated_files/eusart.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   774 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;Total ram usage:        2 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_EUSART_Initialize
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text7
   800  0011E4                     __ptext7:
   801                           	callstack 0
   802  0011E4                     _EUSART_SetOverrunErrorHandler:
   803                           	callstack 28
   804  0011E4                     
   805                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
   806  0011E4  C007  F003         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
   807  0011E8  C008  F004         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
   808  0011EC  0012               	return		;funcret
   809  0011EE                     __end_of_EUSART_SetOverrunErrorHandler:
   810                           	callstack 0
   811                           
   812 ;; *************** function _EUSART_SetFramingErrorHandler *****************
   813 ;; Defined at:
   814 ;;		line 157 in file "mcc_generated_files/eusart.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   817 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_EUSART_Initialize
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text8
   843  0011EE                     __ptext8:
   844                           	callstack 0
   845  0011EE                     _EUSART_SetFramingErrorHandler:
   846                           	callstack 28
   847  0011EE                     
   848                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
   849  0011EE  C007  F005         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
   850  0011F2  C008  F006         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
   851  0011F6  0012               	return		;funcret
   852  0011F8                     __end_of_EUSART_SetFramingErrorHandler:
   853                           	callstack 0
   854                           
   855 ;; *************** function _EUSART_SetErrorHandler *****************
   856 ;; Defined at:
   857 ;;		line 165 in file "mcc_generated_files/eusart.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   860 ;;		 -> EUSART_DefaultErrorHandler(1), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;Total ram usage:        2 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; This function calls:
   879 ;;		Nothing
   880 ;; This function is called by:
   881 ;;		_EUSART_Initialize
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text9
   886  0011F8                     __ptext9:
   887                           	callstack 0
   888  0011F8                     _EUSART_SetErrorHandler:
   889                           	callstack 28
   890  0011F8                     
   891                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
   892  0011F8  C007  F001         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
   893  0011FC  C008  F002         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
   894  001200  0012               	return		;funcret
   895  001202                     __end_of_EUSART_SetErrorHandler:
   896                           	callstack 0
   897                           
   898 ;; *************** function _EUSART_Read *****************
   899 ;; Defined at:
   900 ;;		line 113 in file "mcc_generated_files/eusart.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      unsigned char 
   907 ;; Registers used:
   908 ;;		wreg, status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_main
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text10
   928  00115E                     __ptext10:
   929                           	callstack 0
   930  00115E                     _EUSART_Read:
   931                           	callstack 30
   932  00115E                     l116:
   933                           
   934                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RC1IF)
   935  00115E  AA9E               	btfss	158,5,c	;volatile
   936  001160  EFB4  F008         	goto	u31
   937  001164  EFB6  F008         	goto	u30
   938  001168                     u31:
   939  001168  EFAF  F008         	goto	l116
   940  00116C                     u30:
   941  00116C                     
   942                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
   943  00116C  0E00               	movlw	0
   944  00116E  6E0C               	movwf	_eusartRxLastError^0,c	;volatile
   945  001170                     
   946                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
   947  001170  A2AB               	btfss	171,1,c	;volatile
   948  001172  EFBD  F008         	goto	u41
   949  001176  EFBF  F008         	goto	u40
   950  00117A                     u41:
   951  00117A  EFC1  F008         	goto	l912
   952  00117E                     u40:
   953  00117E                     
   954                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
   955  00117E  98AB               	bcf	171,4,c	;volatile
   956                           
   957                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
   958  001180  88AB               	bsf	171,4,c	;volatile
   959  001182                     l912:
   960                           
   961                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
   962  001182  50AE               	movf	174,w,c	;volatile
   963  001184  0012               	return		;funcret
   964  001186                     __end_of_EUSART_Read:
   965                           	callstack 0
   966                           
   967                           	psect	rparam
   968  0000                     
   969                           	psect	idloc
   970                           
   971                           ;Config register IDLOC0 @ 0x200000
   972                           ;	unspecified, using default values
   973  200000                     	org	2097152
   974  200000  FF                 	db	255
   975                           
   976                           ;Config register IDLOC1 @ 0x200001
   977                           ;	unspecified, using default values
   978  200001                     	org	2097153
   979  200001  FF                 	db	255
   980                           
   981                           ;Config register IDLOC2 @ 0x200002
   982                           ;	unspecified, using default values
   983  200002                     	org	2097154
   984  200002  FF                 	db	255
   985                           
   986                           ;Config register IDLOC3 @ 0x200003
   987                           ;	unspecified, using default values
   988  200003                     	org	2097155
   989  200003  FF                 	db	255
   990                           
   991                           ;Config register IDLOC4 @ 0x200004
   992                           ;	unspecified, using default values
   993  200004                     	org	2097156
   994  200004  FF                 	db	255
   995                           
   996                           ;Config register IDLOC5 @ 0x200005
   997                           ;	unspecified, using default values
   998  200005                     	org	2097157
   999  200005  FF                 	db	255
  1000                           
  1001                           ;Config register IDLOC6 @ 0x200006
  1002                           ;	unspecified, using default values
  1003  200006                     	org	2097158
  1004  200006  FF                 	db	255
  1005                           
  1006                           ;Config register IDLOC7 @ 0x200007
  1007                           ;	unspecified, using default values
  1008  200007                     	org	2097159
  1009  200007  FF                 	db	255
  1010                           
  1011                           	psect	config
  1012                           
  1013                           ; Padding undefined space
  1014  300000                     	org	3145728
  1015  300000  FF                 	db	255
  1016                           
  1017                           ;Config register CONFIG1H @ 0x300001
  1018                           ;	Oscillator Selection bits
  1019                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1020                           ;	Fail-Safe Clock Monitor Enable bit
  1021                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1022                           ;	Internal/External Oscillator Switchover bit
  1023                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1024  300001                     	org	3145729
  1025  300001  08                 	db	8
  1026                           
  1027                           ;Config register CONFIG2L @ 0x300002
  1028                           ;	Power-up Timer Enable bit
  1029                           ;	PWRT = OFF, PWRT disabled
  1030                           ;	Brown-out Reset Enable bits
  1031                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1032                           ;	Brown Out Reset Voltage bits
  1033                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1034  300002                     	org	3145730
  1035  300002  1F                 	db	31
  1036                           
  1037                           ;Config register CONFIG2H @ 0x300003
  1038                           ;	Watchdog Timer Enable bit
  1039                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1040                           ;	Watchdog Timer Postscale Select bits
  1041                           ;	WDTPS = 32768, 1:32768
  1042  300003                     	org	3145731
  1043  300003  1E                 	db	30
  1044                           
  1045                           ; Padding undefined space
  1046  300004                     	org	3145732
  1047  300004  FF                 	db	255
  1048                           
  1049                           ;Config register CONFIG3H @ 0x300005
  1050                           ;	CCP2 MUX bit
  1051                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1052                           ;	PORTB A/D Enable bit
  1053                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1054                           ;	Low-Power Timer1 Oscillator Enable bit
  1055                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1056                           ;	HFINTOSC Fast Start-up
  1057                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1058                           ;	MCLR Pin Enable bit
  1059                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pi  1060  300005                     	org	3145733
  1061  300005  89                 	db	137
  1062                           
  1063                           ;Config register CONFIG4L @ 0x300006
  1064                           ;	Stack Full/Underflow Reset Enable bit
  1065                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1066                           ;	Single-Supply ICSP Enable bit
  1067                           ;	LVP = ON, Single-Supply ICSP enabled
  1068                           ;	Extended Instruction Set Enable bit
  1069                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1070                           ;	Background Debugger Enable bit
  1071                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1072  300006                     	org	3145734
  1073  300006  85                 	db	133
  1074                           
  1075                           ; Padding undefined space
  1076  300007                     	org	3145735
  1077  300007  FF                 	db	255
  1078                           
  1079                           ;Config register CONFIG5L @ 0x300008
  1080                           ;	Code Protection Block 0
  1081                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1082                           ;	Code Protection Block 1
  1083                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1084                           ;	Code Protection Block 2
  1085                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1086                           ;	Code Protection Block 3
  1087                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1088  300008                     	org	3145736
  1089  300008  0F                 	db	15
  1090                           
  1091                           ;Config register CONFIG5H @ 0x300009
  1092                           ;	Boot Block Code Protection bit
  1093                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1094                           ;	Data EEPROM Code Protection bit
  1095                           ;	CPD = OFF, Data EEPROM not code-protected
  1096  300009                     	org	3145737
  1097  300009  C0                 	db	192
  1098                           
  1099                           ;Config register CONFIG6L @ 0x30000A
  1100                           ;	Write Protection Block 0
  1101                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1102                           ;	Write Protection Block 1
  1103                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1104                           ;	Write Protection Block 2
  1105                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1106                           ;	Write Protection Block 3
  1107                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1108  30000A                     	org	3145738
  1109  30000A  0F                 	db	15
  1110                           
  1111                           ;Config register CONFIG6H @ 0x30000B
  1112                           ;	Configuration Register Write Protection bit
  1113                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1114                           ;	Boot Block Write Protection bit
  1115                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1116                           ;	Data EEPROM Write Protection bit
  1117                           ;	WRTD = OFF, Data EEPROM not write-protected
  1118  30000B                     	org	3145739
  1119  30000B  E0                 	db	224
  1120                           
  1121                           ;Config register CONFIG7L @ 0x30000C
  1122                           ;	Table Read Protection Block 0
  1123                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1124                           ;	Table Read Protection Block 1
  1125                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1126                           ;	Table Read Protection Block 2
  1127                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1128                           ;	Table Read Protection Block 3
  1129                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1130  30000C                     	org	3145740
  1131  30000C  0F                 	db	15
  1132                           
  1133                           ;Config register CONFIG7H @ 0x30000D
  1134                           ;	Boot Block Table Read Protection bit
  1135                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1136  30000D                     	org	3145741
  1137  30000D  40                 	db	64
  1138                           tosu	equ	0xFFF
  1139                           tosh	equ	0xFFE
  1140                           tosl	equ	0xFFD
  1141                           stkptr	equ	0xFFC
  1142                           pclatu	equ	0xFFB
  1143                           pclath	equ	0xFFA
  1144                           pcl	equ	0xFF9
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           prodh	equ	0xFF4
  1150                           prodl	equ	0xFF3
  1151                           indf0	equ	0xFEF
  1152                           postinc0	equ	0xFEE
  1153                           postdec0	equ	0xFED
  1154                           preinc0	equ	0xFEC
  1155                           plusw0	equ	0xFEB
  1156                           fsr0h	equ	0xFEA
  1157                           fsr0l	equ	0xFE9
  1158                           wreg	equ	0xFE8
  1159                           indf1	equ	0xFE7
  1160                           postinc1	equ	0xFE6
  1161                           postdec1	equ	0xFE5
  1162                           preinc1	equ	0xFE4
  1163                           plusw1	equ	0xFE3
  1164                           fsr1h	equ	0xFE2
  1165                           fsr1l	equ	0xFE1
  1166                           bsr	equ	0xFE0
  1167                           indf2	equ	0xFDF
  1168                           postinc2	equ	0xFDE
  1169                           postdec2	equ	0xFDD
  1170                           preinc2	equ	0xFDC
  1171                           plusw2	equ	0xFDB
  1172                           fsr2h	equ	0xFDA
  1173                           fsr2l	equ	0xFD9
  1174                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        0
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    send_string@x	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_2(CODE[49]), STR_1(CODE[24]), 


Critical Paths under _main in COMRAM

    _main->_send_string
    _send_string->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     506
                                              3 COMRAM     2     2      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     0      2     212
                                              1 COMRAM     2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_string
     _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5       D       1       13.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      32        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue May 26 14:23:09 2020

                                           l30 108C                                             l16 115C  
                                           l41 109C                                             l50 10A8  
                                           l34 1092                                             l26 1088  
                                           l43 109E                                             l52 10AA  
                                           l36 1094                                             l28 108A  
                                           l45 10A0                                             l38 1096  
                                           l48 10A6                                             l99 1122  
                                           u10 11BC                                             u11 11B8  
                                           u30 116C                                             u31 1168  
                                           u40 117E                                             u41 117A  
                                           u70 115C                                             u71 1158  
                                           u87 1066                                            l120 1184  
                                          l123 11AE                                            l116 115E  
                                          l141 11EC                                            l126 11C0  
                                          l144 1200                                            l160 11E2  
                                          l138 11F6                                            l157 11CE  
                                          l185 11AA                                            l910 117E  
                                          l912 1182                                            l904 115E  
                                          l906 116C                                            l908 1170  
                                          l870 11AE                                            l960 11F8  
                                          l872 11BC                                            l970 111E  
                                          l962 10E6                                            l890 11DA  
                                          l956 11EE                                            l964 10FA  
                                          l884 1186                                            l980 11C2  
                                          l972 1124                                            l958 11E4  
                                          l966 1106                                            l886 1192  
                                          l982 11CA                                            l974 1128  
                                          l990 1072                                            l968 1112  
                                          l888 11A8                                            l976 113A  
                                          l992 107E                                            l984 104C  
                                          l978 113E                                            l994 10B0  
                                          l986 1050                                            l988 105C  
               ?_EUSART_SetFramingErrorHandler 0007                                            wreg 000FE8  
                                 ?_EUSART_Read 0007                                           l1004 10C4  
                                         STR_1 1032                                           STR_2 1001  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           _WPUB 000F7C  
                                         _data 000D                                           _main 104C  
                                         start 0000                                   ___param_bank 000000  
                                ?_EUSART_Write 0007                 __size_of_OSCILLATOR_Initialize 000A  
                __end_of_OSCILLATOR_Initialize 11E4                                          ?_main 0007  
                                        _ANSEL 000F7E                                          _RCREG 000FAE  
                                        _RCSTA 000FAB                                          _SPBRG 000FAF  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                                          tablat 000FF5  
                                        status 000FD8                                __initialization 11D0  
                                 __end_of_main 10E6                                 ??_EUSART_Write 0007  
                                       ??_main 000A                                  __activetblptr 000003  
            _EUSART_DefaultFramingErrorHandler 000000                     _EUSART_OverrunErrorHandler 0003  
                                       _ANSELH 000F7F                                   ?_send_string 0008  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                 __mediumconst 0000                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         __size_of_EUSART_Read 0028                              _SYSTEM_Initialize 11C2  
                                   __accesstop 0060                        __end_of__initialization 11D4  
                           ?_SYSTEM_Initialize 0007                                  ___rparam_used 000001  
                               __pcstackCOMRAM 0007                            ??_SYSTEM_Initialize 0009  
              ??_EUSART_SetOverrunErrorHandler 0009                      __end_of_SYSTEM_Initialize 11D0  
                         __end_of_EUSART_Write 11C2                                     __pnvCOMRAM 0001  
                                      _BAUDCON 000FB8                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0009                           __size_of_send_string 003A  
                                      __Hparam 0000                                        __Lparam 0000  
                                 __psmallconst 1000                                        __pcinit 11D0  
                                      __ramtop 1000                                        __ptext0 104C  
                                      __ptext1 1124                                        __ptext2 11AC  
                                      __ptext3 11C2                                        __ptext4 1186  
                                      __ptext5 11DA                                        __ptext6 10E6  
                                      __ptext7 11E4                                        __ptext8 11EE  
                                      __ptext9 11F8                          _OSCILLATOR_Initialize 11DA  
                     ??_PIN_MANAGER_Initialize 0007                     __size_of_SYSTEM_Initialize 000E  
                         end_of_initialization 11D4          __end_of_EUSART_SetOverrunErrorHandler 11EE  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 11E4  
                            _EUSART_Initialize 10E6                             ?_EUSART_Initialize 0007  
                                    _RCSTAbits 000FAB                            ??_EUSART_Initialize 0009  
                        __size_of_EUSART_Write 0016                __size_of_EUSART_SetErrorHandler 000A  
                    __end_of_EUSART_Initialize 1124                                      _TXSTAbits 000FAC  
                   _EUSART_DefaultErrorHandler 000000                                   _EUSART_Write 11AC  
                       ?_OSCILLATOR_Initialize 0007                            start_initialization 11D0  
              __size_of_PIN_MANAGER_Initialize 0026                                  ??_EUSART_Read 0007  
               ?_EUSART_SetOverrunErrorHandler 0007                     _EUSART_FramingErrorHandler 0005  
                       _EUSART_SetErrorHandler 11F8                                    __pbssCOMRAM 000C  
                   __size_of_EUSART_Initialize 003E                            __end_of_EUSART_Read 1186  
                       _PIN_MANAGER_Initialize 1186                                    __smallconst 1000  
                                ??_send_string 000A         EUSART_SetErrorHandler@interruptHandler 0007  
                                     _LATBbits 000F8A                              _eusartRxLastError 000C  
                                     _PIR1bits 000F9E                ??_EUSART_SetFramingErrorHandler 0009  
            _EUSART_DefaultOverrunErrorHandler 000000                                    _EUSART_Read 115E  
                                  _INTCON2bits 000FF1                                       __Hrparam 0000  
                                 send_string@x 0008                            __end_of_send_string 115E  
                                     __Lrparam 0000                        ??_OSCILLATOR_Initialize 0007  
                          _EUSART_ErrorHandler 0001                                       __ptext10 115E  
                                __size_of_main 009A                        ?_EUSART_SetErrorHandler 0007  
EUSART_SetOverrunErrorHandler@interruptHandler 0007          __end_of_EUSART_SetFramingErrorHandler 11F8  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 11EE  
                                   _INTCONbits 000FF2                                    _send_string 1124  
                      ?_PIN_MANAGER_Initialize 0007                 __end_of_EUSART_SetErrorHandler 1202  
EUSART_SetFramingErrorHandler@interruptHandler 0007                             EUSART_Write@txData 0007  
               __end_of_PIN_MANAGER_Initialize 11AC  
